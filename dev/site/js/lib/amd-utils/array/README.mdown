# amd-utils / array #

Array utilities.



## <a href="#toc" name="toc">Table of Contents</a>

 - [`contains()`](#contains)
 - [`every()`](#every)
 - [`filter()`](#filter)
 - [`forEach()`](#forEach)
 - [`indexOf()`](#indexOf)
 - [`isSparse()`](#isSparse)
 - [`lastIndexOf()`](#lastIndexOf)
 - [`map()`](#map)
 - [`remove()`](#remove)
 - [`removeAll()`](#removeAll)
 - [`some()`](#some)
 - [`unique()`](#unique)



## <a href="#contains" name="contains">contains(arr, value):Boolean</a>

Checks if Array contains value. Alias to `indexOf(arr, val) !== -1`.

```js
var arr = [1, 2, 3];
contains(arr, 2);      // true
contains(arr, 'foo');  // false
```



## <a href="#every" name="every">every(arr, callback, [thisObj]):Array</a>

ES5 Array every.

Tests whether all elements in the array pass the test implemented by the provided function.

more info at [MDN Array#every](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every)



## <a href="#filter" name="filter">filter(arr, callback, [thisObj]):Array</a>

ES5 Array filter.

Creates a new array with all elements that pass the callback test.

more info at [MDN Array#filter](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter)



## <a href="#forEach" name="forEach">forEach(arr, callback, [thisObj]):void</a>

ES5 Array forEach.

more info at [MDN Array#forEach](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach)



## <a href="#indexOf" name="indexOf">indexOf(arr, item, [fromIndex]):Number</a>

ES5 indexOf (since it doesn't work on IE 6-8 natively)

more info at [MDN Array#indexOf](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf)




## <a href="#isSparse" name="isSparse">isSparse(arr):Boolean</a>

Checks if it is a *sparse* array.

### Example

```js
var arr = ['foo'];
arr[6] = 'bar';
isSparse(arr); // true

var arr2 = ['lorem', 'ipsum'];
isSparse(arr2); // false
```



## <a href="#indexOf" name="lastIndexOf">lastIndexOf(arr, item, [fromIndex]):Number</a>

ES5 Array.lastIndexOf (since it doesn't work on IE 6-8 natively)

more info at [MDN Array#lastIndexOf](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf)



## <a href="#map" name="map">map(arr, callback):Array</a>

ES5 Array.map : Creates a new array with the results of calling
a provided function on every element in this array.

more info at [MDN Array#map](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map)



## <a href="#remove" name="remove">remove(arr, item):void</a>

Remove a single item from the array.

IMPORTANT: it won't remove duplicates, just a single item.

### Example

```js
var foo = [1, 2, 3, 4];
remove(foo, 2);
console.log(foo); // [1, 3, 4]
```



## <a href="#removeAll" name="removeAll">removeAll(arr, item):void</a>

Remove all instances of an item from the array.

### Example

```js
var foo = [1, 2, 3, 4, 2, 2];
removeAll(foo, 2);
console.log(foo); // [1, 3, 4];
```



## <a href="#some" name="some">some(arr, callback, [thisObj]):Array </a>

ES5 Array some.

Tests whether some element in the array passes the test implemented by the provided function.

more info at [MDN Array#some](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some)



## <a href="#unique" name="unique">unique(arr):Array</a>

Return a new Array of unique items.

### Example

```js
var foo = [1, 2, 3, 4, 2, 2, 3, 4];
var bar = unique(foo);
console.log(foo); // [1, 2, 3, 4];
```



-------------------------------------------------------------------------------

For more usage examples check specs inside `/tests` folder. Unit tests are the
best documentation you can get...

