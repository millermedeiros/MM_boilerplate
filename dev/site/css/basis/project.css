/* 
 * PROJECT
 * -------
 * It is impossible to create base styles that works for all kinds 
 * of projects, that's why these styles should be edited in almost 
 * all projects. Use them as an implementation reference.
 * 
 * It may be a good idea to move this file outside the "basis" 
 * folder if you edit it. If the file start getting too large 
 * split into multiple files to keep it organized.
 */



/* ========================= GENERAL TAGS ========================= */

/*
 * Favor classes over general selectors to increase flexibility of your code.
 *	
 * Add a bare minimum styling using elements selectors and "enhance it" with classes.
 *	
 * I don't recommend adding any other element selector to this list if you want flexibility, 
 * in some cases it is even a good idea to remove all of them and just use classes.
 */

html{font-family:Arial, Helvetica, sans-serif; overflow-y:scroll; min-width:1000px}
body{background-color:#fff; color:#444; font-size:12px; line-height:1.5em}

p{margin:1em 0}
small{font-size:.833em}
em, i{font-style:italic}
strong, b{font-weight:bold}
code, pre{font-family:monospace}

a{text-decoration:underline}
a:hover, a:focus{text-decoration:none}
a:hover, a:active{outline:none}




/* ========================== GENERIC CLASSES ======================== */


/* --- font-styles --- */

/*
 * If your project have a regular structure it may be a good idea to add
 * default styles to the headings that match the same style of these classes,
 * see: https://github.com/stubbornella/oocss/blob/master/core/heading/heading.css 
 * for reference. Not using this approach since in many of my projects having 
 * defaults causes more problems than it solves (many projects have a loose structure).
 */
.h-1, .h-2, .h-3, .h-4, .h-5, .h-6{font-weight:bold; line-height:1em}
.h-1{font-size:2em; margin:.766em 0 .388em}
.h-2{font-size:1.6em; margin:.833em 0 .5em}
.h-3{font-size:1.4em; margin:1em 0 .666em}
.h-4{font-size:1.2em; margin:1.133em 0 .766em}
.h-5{font-size:1.1em; margin:1.2em 0 .833em}
.h-6{font-size:1em; margin:1.5em 0 1em}

.b{font-weight:bold}
.em{font-style:italic}
.big{font-size:1.166em}
.small{font-size:.833em}
.del{text-decoration:line-through}


/* --- lists --- */

.nav, .nav > li{padding:0; margin:0; list-style:none} /* not really required, just to safeguard against ul,ol global definitions */
.navleft{text-align:left}
.navleft > li, .navright > li, .navcenter > li{display:inline}
.navleft > li > a, .navright > li > a, .navcenter > li > a{padding:0 .5em}
.navright{text-align:right}
.navcenter{text-align:center}
.navcenter > li > a{display:inline-block}

.simplelist{margin:1em 0}
.simplelist, .simplelist ol, .simplelist ul{padding-left:2em}
ol.simplelist, .simplelist ol{list-style:decimal}
ul.simplelist, .simplelist ul{list-style:disc}
.simplelist li{margin:.5em 0}
.simplelist ul, .simplelist ol{margin:0 0 1em}
.simplelist dt{margin:1em 0 .2em; font-weight:bold}
.simplelist dd{margin:.5em 0; padding-left:2em}


/* --- other --- */

.hr-1{background-color:#fff; border:1px solid #fff; border-top:1px solid #aaa; clear:both; margin:2em 0}




/* ========================== STRUCTURE/CONTENT ======================= */

/*
 *
 * This is where you place the main structure of your pages, avoid using IDs as much as possible (favor classes),
 * specially for styling child elements (e.g. `#header li`) since it will probably create specificity nightmares
 * create a new class instead (e.g. `.headernav li`).
 *
 * I usually keep IDs for the #wrapper (wraps whole page content, gives more flexibility than using just the body tag), 
 * #header (main site header), #footer (main site footer), #content (main content area) and sometimes #sidebar, 
 * #mainnav and #subnav.
 *
 */

#wrapper{overflow:hidden; /* overflow is important for grid (it should be set on the .gridholder parent element). that way we don't need to use classes like .last, .end, .omega or wrap each row into a different container or wrap .gridholder into another container */}

.innerwrapper{width:966px; margin:0 auto} 


